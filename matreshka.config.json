{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://redsock.ru",
  "title": "Matreshka",
  "description": "Matreshka based configuration",
  "type": "object",
  "properties": {
    "app_info": {
      "description": "Basic application information",
      "type": "object",
      "properties": {
        "name": {
          "description": "App name. May be presented in golang package format. e.g `github.com/godverv/matreshka-be`. In this case app will be using last part (matreshka-be) as a environment name",
          "type": "string"
        },
        "version": {
          "description": "Current version of app",
          "type": "string",
          "pattern": "v[0-9]+\\.[0-9]+\\.[0-9]+"
        },
        "startup_duration": {
          "description": "Amount of seconds required for application to start",
          "type": "string",
          "pattern": "[1-9][0-9]+s"
        }
      },
      "required": [
        "name",
        "version"
      ]
    },
    "servers": {
      "description": "Definition of servers. Key must be a port",
      "type": "object",
      "patternProperties": {
        "^[0-9]+$": {
          "type": "object",
          "patternProperties": {
            "\/[a-z]*[A-Z]*{GRPC}[a-z]*[A-Z]*": {
              "type": "object",
              "properties": {
                "module": {
                  "description": "GRPC | GOLANG module name"
                },
                "gateway": {
                  "description": "Path for HTTP proxy to grpc handles."
                }
              }
            },
            "\/[a-z]*[A-Z]*{FS}[a-z]*[A-Z]*": {
              "type": "object",
              "properties": {
                "dist": {
                  "description": "Path to folder | file to host as a server"
                }
              }
            }
          },
          "additionalProperties": true
        }
      },
      "additionalProperties": false
    },
    "data_sources": {
      "description": "Definition of data sources: Databases, APIs and Telegram bots",
      "type": "array",
      "items": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/definitions/postgres"
          },
          {
            "$ref": "#/definitions/redis"
          },
          {
            "$ref": "#/definitions/telegram"
          },
          {
            "$ref": "#/definitions/grpc"
          },
          {
            "$ref": "#/definitions/sqlite"
          }
        ]
      }
    },
    "environment": {
      "description": "Defines additional environment variables",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Env var name. Spaces will be replaced with \"-\" character. Actual ENV name will start with {NAME-OF-SERVICE}_ENVIRONMENT as prefix",
            "type": "string"
          },
          "type": {
            "description": "Might one of following enums string | duration | bool | float | int",
            "type": "string",
            "enum": [
              "string",
              "duration",
              "bool",
              "float",
              "int"
            ]
          }
        }
      }
    },
    "service_discovery": {
      "description": "Service discovery local override",
      "type":"object",
      "properties": {
        "makosh_url": {
          "description": "URL path to custom makosh instance",
          "type": "string"
        },
        "makosh_token": {
          "description": "A custom token to auth into makosh instance",
          "type": "string"
        },
        "overrides": {
          "description": "Service specific override of connection URL",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "service_name": {
                "type": "string"
              },
              "urls": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "postgres": {
      "description": "Defines connection to postgres",
      "type": "object",
      "properties": {
        "resource_name": {
          "description": "Name of connection. Must start with postgres",
          "type": "string",
          "pattern": "postgres(_|)(.+|)"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/port"
        },
        "user": {
          "type": "string"
        },
        "pwd": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "ssl_mode": {
          "enum": [
            "disable",
            "allow",
            "prefer",
            "require",
            "verify-ca",
            "verify-full"
          ]
        }
      },
      "required": [
        "resource_name",
        "host",
        "port",
        "user",
        "name"
      ]
    },
    "redis": {
      "type": "object",
      "properties": {
        "resource_name": {
          "description": "Name of connection. Must start with redis",
          "type": "string",
          "pattern": "redis(_|)(.+|)"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/port"
        },
        "user": {
          "type": "string"
        },
        "pwd": {
          "type": "string"
        },
        "db": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "resource_name",
        "host",
        "port"
      ]
    },
    "telegram": {
      "description": "Name of resource. Must start with telegram",
      "type": "object",
      "properties": {
        "resource_name": {
          "type": "string",
          "pattern": "telegram(_|)(.+|)"
        },
        "api_key": {
          "type": "string"
        }
      }
    },
    "grpc": {
      "description": "Name of grpc service. Must start with grpc",
      "type": "object",
      "properties": {
        "resource_name": {
          "type": "string",
          "pattern": "grpc(_|)(.+|)"
        },
        "connection_string": {
          "type": "string"
        },
        "module": {
          "type": "string"
        }
      }
    },
    "sqlite": {
      "description": "Definition of sqlite",
      "type": "object",
      "properties": {
        "resource_name": {
          "type": "string",
          "pattern": "sqlite(_|)(.+|)"
        },
        "path": {
          "type": "string"
        },
        "migrations_folder": {
          "type": "string"
        }
      }
    },
    "port": {
      "type": "integer",
      "exclusiveMinimum": 0,
      "exclusiveMaximum": 65536
    }
  }
}